# https://stackoverflow.com/questions/66466082/how-do-i-write-a-snakemake-input-when-not-all-jobs-successfully-output-files-fro

import os
import glob
#FIELD = "S2207+4114"
#FIELD = "S1629+5324"
#FIELD = "S1025+5550"
#FIELD = "S1401+3130"
#FIELD = "S1402+3622"
#FIELD = "S1408+3356"
#FIELD = "S1414+3130"
#FIELD = "S1318+5550"
#FIELD = "S1021+5815"
#FIELD = "S0037+3130"
#FIELD = "S0221+3130"
#FIELD = "S0221+3356"
#FIELD = "S1308+5324"
#FIELD = "S1435+4832"
#FIELD = "S1435+3356"
#FIELD = "S1326+5324"
#FIELD = "S1432+3848"

configfile: "config.yaml"
FIELD = config['FIELD']

beams, = glob_wildcards(FIELD+"/HI_B0{xx}_cube2_spline_clean_image.fits")

wildcard_constraints:
    beams="\d+"

rule all:
    input:
        "mos_"+FIELD+"/"+FIELD+"_beams.png"

def aggregate_input(wildcards):
    found_files = expand(FIELD+"/HI_B0{xx}_cube2_spline_clean_image.fits", xx=beams)
    return found_files

rule aggregate_mosaic2:
    input:
        pb = aggregate_input,
    output:
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image.fits",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image.hdr",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_noise.fits",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_weights.fits",
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_fields"),
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_fields.tbl"),
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_fields_regrid"),
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_fields_regrid.tbl"),
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_beams_regrid"),
        temp("mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_beams_regrid.tbl"),
        # temp("mos_"+FIELD+"/HI_B0{beam}_cube2_spline_clean_imageR.fits"),
        # temp("mos_"+FIELD+"/HI_B0{beam}_cube2_spline_clean_imageR_area.fits"),
        # temp("mos_"+FIELD+"/HI_B0{beam}_cube2_spline_clean_pbR.fits"),
        # temp("mos_"+FIELD+"/HI_B0{beam}_cube2_spline_clean_pbR_area.fits")
    run:
        input = list(input)
        mos_params = " ".join([i.split("/")[1] for i in input if "spline_clean_image" in i])
        os.system('mosaic-queen -mc 0.1 -n '+FIELD+'_HIcube2_clean -i '+FIELD+' -o mos_'+FIELD+' -t '+mos_params+' -r')
        os.system('rm -rf mos_'+FIELD+'/*imageR*')
        os.system('rm -rf mos_'+FIELD+'/*pbR*')

rule h:
    input:
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image.fits",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_image_sofiaFS_mask_bin_dil.fits"
    output:
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_cat.txt",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_cat.xml",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_mask-2d.fits",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_mask.fits"
    shell:
        "/usr/bin/sofia ../scratch/stuff/aper_sf2/sofia_final_template.par input.data={input[0]} input.mask={input[1]}"

rule i:
    input:
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image.fits",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_cat.xml"
    output:
        "mos_"+FIELD+"/specfull.txt"
    shell:
        "python3 ../scratch/stuff/aper_sf2/src/get_specfull.py -t "+FIELD+" -c 2; "
        "touch {output}"

rule j:
    input:
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image_cat.xml",
        "mos_"+FIELD+"/"+FIELD+"_HIcube2_clean_image.fits",
        "mos_"+FIELD+"/specfull.txt"
    output:
        "mos_"+FIELD+"/sip.txt"
    shell:
        "sofia_image_pipeline -c {input[0]} -s panstarrs 'DSS2 Blue' 'GALEX Near UV' -i 5 -m; "
        #"sofia_image_pipeline -c {input[0]} -s 'DSS2 Blue' 'GALEX Near UV' -i 5 -m; "
        "touch {output}"

rule k:
    input:
        "mos_"+FIELD+"/sip.txt"
    output:
        "mos_"+FIELD+"/sip_edit.txt"
    shell:
        "python3 ../scratch/stuff/aper_sf2/src/edit_sip_images.py -t "+FIELD+" -c 2; "
        "touch {output}"

rule l:
    input:
        "mos_" + FIELD + "/sip_edit.txt"
    output:
        "mos_" + FIELD + "/rename.txt"
    shell:
        "python3 ../scratch/stuff/aper_sf2/src/rename_combo.py -t " + FIELD + " -c 2; "
        "touch {output}"

rule m:
    input:
        "mos_"+FIELD+"/rename.txt"
    output:
        "mos_"+FIELD+"/"+FIELD+"_beams.png"
    shell:
        "python3 ../scratch/stuff/aper_sf2/src/plot_beams.py -t "+FIELD+" -c 2"
